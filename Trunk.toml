[build]
public_url = "."
minify = "on_release"

[[hooks]]
stage = "build"
command = "bash"
command_arguments = ["-c", """
  cd codemirror && \
  npm install && \
  node_modules/.bin/rollup codemirror_interface.ts -f es \
      -o $TRUNK_STAGING_DIR/codemirror.js \
      -p @rollup/plugin-node-resolve \
      -p @rollup/plugin-typescript \
      $([ "$TRUNK_PROFILE" = "release" ] && echo -p @rollup/plugin-terser)
  """]

[[hooks]]
stage = "build"
command = "bash"
command_arguments = ["-c", """
    gen_manifest() {
        cd compilers
        echo -n '{'
        for comp in *.tar.br; do
            name=${comp%.tar.br}
            size=$(brotli --decompress --stdout "$comp" | wc -c)
            echo -n "\\\"$name\\\":$size,"
        done
        echo '}'
    }
    mkdir -p $TRUNK_STAGING_DIR/compilers/
    gen_manifest | sed 's/,}/}/' > $TRUNK_STAGING_DIR/compilers/manifest.json
    """]
